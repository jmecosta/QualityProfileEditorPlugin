<controls:MetroWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d" x:Class="SqaleUi.View.SqaleEditorWindow"
    xmlns:viewModel="clr-namespace:SqaleUi.ViewModel"
    xmlns:view="clr-namespace:SqaleUi.View"
    xmlns:helpers="clr-namespace:SqaleUi.helpers"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    Title="SonarQube Quality Editor"
    d:DesignHeight="600" d:DesignWidth="1040"
    d:DataContext="{d:DesignInstance {x:Type viewModel:SqaleEditorControlViewModel}}">


    <Window.Resources>
        <ResourceDictionary>


            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />

                <ResourceDictionary Source="pack://application:,,,/SqaleUi;component/Resources/Icons.xaml" />

            </ResourceDictionary.MergedDictionaries>
            <helpers:InverseBooleanConverter x:Key="BooleanInverter" />
            <DataTemplate DataType="{x:Type viewModel:SqaleGridVm}">
                <view:SqaleGrid />
            </DataTemplate>

            <Image x:Key="AddTab" Source="/SqaleUi;component/Images/addtab.png" />
            <Image x:Key="RemoveTab" Source="/SqaleUi;component/Images/removetab.png" />


        </ResourceDictionary>


    </Window.Resources>
    <Window.Background>
        <SolidColorBrush Color="{Binding BackGroundColor}" />
    </Window.Background>

    <Window.Foreground>
        <SolidColorBrush Color="{Binding ForeGroundColor}" />
    </Window.Foreground>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="3*" />
            <RowDefinition Height="25" />
            <RowDefinition Height="32" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="180" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>

        <Menu x:Name="File" Grid.ColumnSpan="2">
            <MenuItem Header="File">
                <MenuItem Header="New Project" Command="{Binding NewProjectCommand}"
                          IsEnabled="{Binding CanExecuteNewProjectCommand}" />
                <Separator Height="0" />
                <MenuItem Header="Open Project" Command="{Binding OpenProjectCommand}"
                          IsEnabled="{Binding CanExecuteOpenProjectCommand}" />
                <Separator Height="0" />
                <MenuItem Header="Save Project" Command="{Binding SaveProjectCommand}"
                          IsEnabled="{Binding CanExecuteSaveProjectCommand}" />
                <Separator Height="0" />
                <MenuItem Header="Save As Project" Command="{Binding SaveAsProjectCommand}"
                          IsEnabled="{Binding CanExecuteSaveAsProjectCommand}" />
                <Separator Height="0" />
                <MenuItem Header="Close Project" Command="{Binding CloseProjectCommand}"
                          IsEnabled="{Binding CanExecuteCloseProjectCommand}" />
            </MenuItem>
            <MenuItem Header="Project Profile Editor" Command="{Binding OpenVsWindow}"
                      IsEnabled="{Binding IsConnected}" />
        </Menu>
        <StackPanel Grid.Row="2" Orientation="Horizontal">
            <Button Command="{Binding CreateWorkAreaCommand}" ToolTip="Create Empty Work Area"
                    IsEnabled="{Binding IsAddTabEnabled}" Content="{DynamicResource AddTab}" Background="Transparent" />
            <Separator Width="115" />
            <Button Command="{Binding DeleteWorkAreaCommand}" ToolTip="Remove Selected Work Area"
                    IsEnabled="{Binding IsRemoveTabEnabled}" Content="{DynamicResource RemoveTab}"
                    Background="Transparent" />

        </StackPanel>
        <ListBox x:Name="ListBoxMenu"
                 Grid.Column="0" Grid.Row="1" Margin="5"
                 ItemsSource="{Binding Tabs}"
                 SelectedItem="{Binding SelectedTab}"
                 SelectedIndex="0">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Header}" Padding="10" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Border Grid.Column="1" Grid.RowSpan="2" Grid.Row="1" Margin="5" BorderBrush="#FF7F9DB9" BorderThickness="1">
            <ContentControl Content="{Binding ElementName=ListBoxMenu, Path=SelectedItem}" />
        </Border>


        <StatusBar Grid.Row="3" Grid.ColumnSpan="2">
            <StatusBarItem HorizontalAlignment="Left">
                <TextBlock Text="{Binding StatusMessage, FallbackValue=Connected}"
                           ToolTip="{Binding DiagnosticMessage}" />
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">

                    <StatusBarItem>
                        <ToggleButton Width="30"
                                      Height="30"
                                      Margin="0, -6, 0, 0"
                                      Style="{DynamicResource MetroCircleToggleButtonStyle}"
                                      Command="{Binding ConnectCommand}" IsChecked="{Binding IsConnected}"
                                      IsEnabled="{Binding CanConnectEnabled}">
                            <ToggleButton.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Connect" Command="{Binding ConnectedToServerCommand}"
                                              IsEnabled="{Binding IsConnected, Converter={StaticResource BooleanInverter}}" />
                                    <MenuItem Header="Disconnect" Command="{Binding DisconnectToServerCommand}"
                                              IsEnabled="{Binding IsConnected}" />
                                    <MenuItem Header="Change Server" Command="{Binding SelectedNewServerCommand}"
                                              IsEnabled="{Binding IsConnected, Converter={StaticResource BooleanInverter}}" />
                                </ContextMenu>
                            </ToggleButton.ContextMenu>
                            <Rectangle Width="15" Height="15" Fill="Blue">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_connect}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </ToggleButton>

                    </StatusBarItem>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>

    </Grid>

</controls:MetroWindow>